/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package bcgov.rsbc.ride.kafka.evteventproducer.model.issuance;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class columnValues extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -1556954419445162943L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"columnValues\",\"namespace\":\"bcgov.rsbc.ride.kafka.evteventproducer.model.issuance\",\"fields\":[{\"name\":\"count_nbr\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"\"},{\"name\":\"act_cd\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"\"},{\"name\":\"section_txt\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"\"},{\"name\":\"section_dsc\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"\"},{\"name\":\"fine_amt\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"\"},{\"name\":\"wording_nbr\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"null\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<columnValues> ENCODER =
      new BinaryMessageEncoder<columnValues>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<columnValues> DECODER =
      new BinaryMessageDecoder<columnValues>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<columnValues> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<columnValues> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<columnValues> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<columnValues>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this columnValues to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a columnValues from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a columnValues instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static columnValues fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.String count_nbr;
  @Deprecated public java.lang.String act_cd;
  @Deprecated public java.lang.String section_txt;
  @Deprecated public java.lang.String section_dsc;
  @Deprecated public java.lang.String fine_amt;
  @Deprecated public java.lang.String wording_nbr;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public columnValues() {}

  /**
   * All-args constructor.
   * @param count_nbr The new value for count_nbr
   * @param act_cd The new value for act_cd
   * @param section_txt The new value for section_txt
   * @param section_dsc The new value for section_dsc
   * @param fine_amt The new value for fine_amt
   * @param wording_nbr The new value for wording_nbr
   */
  public columnValues(java.lang.String count_nbr, java.lang.String act_cd, java.lang.String section_txt, java.lang.String section_dsc, java.lang.String fine_amt, java.lang.String wording_nbr) {
    this.count_nbr = count_nbr;
    this.act_cd = act_cd;
    this.section_txt = section_txt;
    this.section_dsc = section_dsc;
    this.fine_amt = fine_amt;
    this.wording_nbr = wording_nbr;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return count_nbr;
    case 1: return act_cd;
    case 2: return section_txt;
    case 3: return section_dsc;
    case 4: return fine_amt;
    case 5: return wording_nbr;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: count_nbr = value$ != null ? value$.toString() : null; break;
    case 1: act_cd = value$ != null ? value$.toString() : null; break;
    case 2: section_txt = value$ != null ? value$.toString() : null; break;
    case 3: section_dsc = value$ != null ? value$.toString() : null; break;
    case 4: fine_amt = value$ != null ? value$.toString() : null; break;
    case 5: wording_nbr = value$ != null ? value$.toString() : null; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'count_nbr' field.
   * @return The value of the 'count_nbr' field.
   */
  public java.lang.String getCountNbr() {
    return count_nbr;
  }


  /**
   * Sets the value of the 'count_nbr' field.
   * @param value the value to set.
   */
  public void setCountNbr(java.lang.String value) {
    this.count_nbr = value;
  }

  /**
   * Gets the value of the 'act_cd' field.
   * @return The value of the 'act_cd' field.
   */
  public java.lang.String getActCd() {
    return act_cd;
  }


  /**
   * Sets the value of the 'act_cd' field.
   * @param value the value to set.
   */
  public void setActCd(java.lang.String value) {
    this.act_cd = value;
  }

  /**
   * Gets the value of the 'section_txt' field.
   * @return The value of the 'section_txt' field.
   */
  public java.lang.String getSectionTxt() {
    return section_txt;
  }


  /**
   * Sets the value of the 'section_txt' field.
   * @param value the value to set.
   */
  public void setSectionTxt(java.lang.String value) {
    this.section_txt = value;
  }

  /**
   * Gets the value of the 'section_dsc' field.
   * @return The value of the 'section_dsc' field.
   */
  public java.lang.String getSectionDsc() {
    return section_dsc;
  }


  /**
   * Sets the value of the 'section_dsc' field.
   * @param value the value to set.
   */
  public void setSectionDsc(java.lang.String value) {
    this.section_dsc = value;
  }

  /**
   * Gets the value of the 'fine_amt' field.
   * @return The value of the 'fine_amt' field.
   */
  public java.lang.String getFineAmt() {
    return fine_amt;
  }


  /**
   * Sets the value of the 'fine_amt' field.
   * @param value the value to set.
   */
  public void setFineAmt(java.lang.String value) {
    this.fine_amt = value;
  }

  /**
   * Gets the value of the 'wording_nbr' field.
   * @return The value of the 'wording_nbr' field.
   */
  public java.lang.String getWordingNbr() {
    return wording_nbr;
  }


  /**
   * Sets the value of the 'wording_nbr' field.
   * @param value the value to set.
   */
  public void setWordingNbr(java.lang.String value) {
    this.wording_nbr = value;
  }

  /**
   * Creates a new columnValues RecordBuilder.
   * @return A new columnValues RecordBuilder
   */
  public static bcgov.rsbc.ride.kafka.evteventproducer.model.issuance.columnValues.Builder newBuilder() {
    return new bcgov.rsbc.ride.kafka.evteventproducer.model.issuance.columnValues.Builder();
  }

  /**
   * Creates a new columnValues RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new columnValues RecordBuilder
   */
  public static bcgov.rsbc.ride.kafka.evteventproducer.model.issuance.columnValues.Builder newBuilder(bcgov.rsbc.ride.kafka.evteventproducer.model.issuance.columnValues.Builder other) {
    if (other == null) {
      return new bcgov.rsbc.ride.kafka.evteventproducer.model.issuance.columnValues.Builder();
    } else {
      return new bcgov.rsbc.ride.kafka.evteventproducer.model.issuance.columnValues.Builder(other);
    }
  }

  /**
   * Creates a new columnValues RecordBuilder by copying an existing columnValues instance.
   * @param other The existing instance to copy.
   * @return A new columnValues RecordBuilder
   */
  public static bcgov.rsbc.ride.kafka.evteventproducer.model.issuance.columnValues.Builder newBuilder(bcgov.rsbc.ride.kafka.evteventproducer.model.issuance.columnValues other) {
    if (other == null) {
      return new bcgov.rsbc.ride.kafka.evteventproducer.model.issuance.columnValues.Builder();
    } else {
      return new bcgov.rsbc.ride.kafka.evteventproducer.model.issuance.columnValues.Builder(other);
    }
  }

  /**
   * RecordBuilder for columnValues instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<columnValues>
    implements org.apache.avro.data.RecordBuilder<columnValues> {

    private java.lang.String count_nbr;
    private java.lang.String act_cd;
    private java.lang.String section_txt;
    private java.lang.String section_dsc;
    private java.lang.String fine_amt;
    private java.lang.String wording_nbr;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(bcgov.rsbc.ride.kafka.evteventproducer.model.issuance.columnValues.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.count_nbr)) {
        this.count_nbr = data().deepCopy(fields()[0].schema(), other.count_nbr);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.act_cd)) {
        this.act_cd = data().deepCopy(fields()[1].schema(), other.act_cd);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.section_txt)) {
        this.section_txt = data().deepCopy(fields()[2].schema(), other.section_txt);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.section_dsc)) {
        this.section_dsc = data().deepCopy(fields()[3].schema(), other.section_dsc);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.fine_amt)) {
        this.fine_amt = data().deepCopy(fields()[4].schema(), other.fine_amt);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.wording_nbr)) {
        this.wording_nbr = data().deepCopy(fields()[5].schema(), other.wording_nbr);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
    }

    /**
     * Creates a Builder by copying an existing columnValues instance
     * @param other The existing instance to copy.
     */
    private Builder(bcgov.rsbc.ride.kafka.evteventproducer.model.issuance.columnValues other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.count_nbr)) {
        this.count_nbr = data().deepCopy(fields()[0].schema(), other.count_nbr);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.act_cd)) {
        this.act_cd = data().deepCopy(fields()[1].schema(), other.act_cd);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.section_txt)) {
        this.section_txt = data().deepCopy(fields()[2].schema(), other.section_txt);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.section_dsc)) {
        this.section_dsc = data().deepCopy(fields()[3].schema(), other.section_dsc);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.fine_amt)) {
        this.fine_amt = data().deepCopy(fields()[4].schema(), other.fine_amt);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.wording_nbr)) {
        this.wording_nbr = data().deepCopy(fields()[5].schema(), other.wording_nbr);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'count_nbr' field.
      * @return The value.
      */
    public java.lang.String getCountNbr() {
      return count_nbr;
    }


    /**
      * Sets the value of the 'count_nbr' field.
      * @param value The value of 'count_nbr'.
      * @return This builder.
      */
    public bcgov.rsbc.ride.kafka.evteventproducer.model.issuance.columnValues.Builder setCountNbr(java.lang.String value) {
      validate(fields()[0], value);
      this.count_nbr = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'count_nbr' field has been set.
      * @return True if the 'count_nbr' field has been set, false otherwise.
      */
    public boolean hasCountNbr() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'count_nbr' field.
      * @return This builder.
      */
    public bcgov.rsbc.ride.kafka.evteventproducer.model.issuance.columnValues.Builder clearCountNbr() {
      count_nbr = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'act_cd' field.
      * @return The value.
      */
    public java.lang.String getActCd() {
      return act_cd;
    }


    /**
      * Sets the value of the 'act_cd' field.
      * @param value The value of 'act_cd'.
      * @return This builder.
      */
    public bcgov.rsbc.ride.kafka.evteventproducer.model.issuance.columnValues.Builder setActCd(java.lang.String value) {
      validate(fields()[1], value);
      this.act_cd = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'act_cd' field has been set.
      * @return True if the 'act_cd' field has been set, false otherwise.
      */
    public boolean hasActCd() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'act_cd' field.
      * @return This builder.
      */
    public bcgov.rsbc.ride.kafka.evteventproducer.model.issuance.columnValues.Builder clearActCd() {
      act_cd = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'section_txt' field.
      * @return The value.
      */
    public java.lang.String getSectionTxt() {
      return section_txt;
    }


    /**
      * Sets the value of the 'section_txt' field.
      * @param value The value of 'section_txt'.
      * @return This builder.
      */
    public bcgov.rsbc.ride.kafka.evteventproducer.model.issuance.columnValues.Builder setSectionTxt(java.lang.String value) {
      validate(fields()[2], value);
      this.section_txt = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'section_txt' field has been set.
      * @return True if the 'section_txt' field has been set, false otherwise.
      */
    public boolean hasSectionTxt() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'section_txt' field.
      * @return This builder.
      */
    public bcgov.rsbc.ride.kafka.evteventproducer.model.issuance.columnValues.Builder clearSectionTxt() {
      section_txt = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'section_dsc' field.
      * @return The value.
      */
    public java.lang.String getSectionDsc() {
      return section_dsc;
    }


    /**
      * Sets the value of the 'section_dsc' field.
      * @param value The value of 'section_dsc'.
      * @return This builder.
      */
    public bcgov.rsbc.ride.kafka.evteventproducer.model.issuance.columnValues.Builder setSectionDsc(java.lang.String value) {
      validate(fields()[3], value);
      this.section_dsc = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'section_dsc' field has been set.
      * @return True if the 'section_dsc' field has been set, false otherwise.
      */
    public boolean hasSectionDsc() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'section_dsc' field.
      * @return This builder.
      */
    public bcgov.rsbc.ride.kafka.evteventproducer.model.issuance.columnValues.Builder clearSectionDsc() {
      section_dsc = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'fine_amt' field.
      * @return The value.
      */
    public java.lang.String getFineAmt() {
      return fine_amt;
    }


    /**
      * Sets the value of the 'fine_amt' field.
      * @param value The value of 'fine_amt'.
      * @return This builder.
      */
    public bcgov.rsbc.ride.kafka.evteventproducer.model.issuance.columnValues.Builder setFineAmt(java.lang.String value) {
      validate(fields()[4], value);
      this.fine_amt = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'fine_amt' field has been set.
      * @return True if the 'fine_amt' field has been set, false otherwise.
      */
    public boolean hasFineAmt() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'fine_amt' field.
      * @return This builder.
      */
    public bcgov.rsbc.ride.kafka.evteventproducer.model.issuance.columnValues.Builder clearFineAmt() {
      fine_amt = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'wording_nbr' field.
      * @return The value.
      */
    public java.lang.String getWordingNbr() {
      return wording_nbr;
    }


    /**
      * Sets the value of the 'wording_nbr' field.
      * @param value The value of 'wording_nbr'.
      * @return This builder.
      */
    public bcgov.rsbc.ride.kafka.evteventproducer.model.issuance.columnValues.Builder setWordingNbr(java.lang.String value) {
      validate(fields()[5], value);
      this.wording_nbr = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'wording_nbr' field has been set.
      * @return True if the 'wording_nbr' field has been set, false otherwise.
      */
    public boolean hasWordingNbr() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'wording_nbr' field.
      * @return This builder.
      */
    public bcgov.rsbc.ride.kafka.evteventproducer.model.issuance.columnValues.Builder clearWordingNbr() {
      wording_nbr = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public columnValues build() {
      try {
        columnValues record = new columnValues();
        record.count_nbr = fieldSetFlags()[0] ? this.count_nbr : (java.lang.String) defaultValue(fields()[0]);
        record.act_cd = fieldSetFlags()[1] ? this.act_cd : (java.lang.String) defaultValue(fields()[1]);
        record.section_txt = fieldSetFlags()[2] ? this.section_txt : (java.lang.String) defaultValue(fields()[2]);
        record.section_dsc = fieldSetFlags()[3] ? this.section_dsc : (java.lang.String) defaultValue(fields()[3]);
        record.fine_amt = fieldSetFlags()[4] ? this.fine_amt : (java.lang.String) defaultValue(fields()[4]);
        record.wording_nbr = fieldSetFlags()[5] ? this.wording_nbr : (java.lang.String) defaultValue(fields()[5]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<columnValues>
    WRITER$ = (org.apache.avro.io.DatumWriter<columnValues>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<columnValues>
    READER$ = (org.apache.avro.io.DatumReader<columnValues>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.count_nbr);

    out.writeString(this.act_cd);

    out.writeString(this.section_txt);

    out.writeString(this.section_dsc);

    out.writeString(this.fine_amt);

    out.writeString(this.wording_nbr);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.count_nbr = in.readString();

      this.act_cd = in.readString();

      this.section_txt = in.readString();

      this.section_dsc = in.readString();

      this.fine_amt = in.readString();

      this.wording_nbr = in.readString();

    } else {
      for (int i = 0; i < 6; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.count_nbr = in.readString();
          break;

        case 1:
          this.act_cd = in.readString();
          break;

        case 2:
          this.section_txt = in.readString();
          break;

        case 3:
          this.section_dsc = in.readString();
          break;

        case 4:
          this.fine_amt = in.readString();
          break;

        case 5:
          this.wording_nbr = in.readString();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










