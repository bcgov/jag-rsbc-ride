apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerTemplate
metadata:
  name: ride-build-push-image-trigger-use-kaniko
spec:
  params:
  - name: git-url
    description: url of the git repo for the code to be built
  - name: git-revision
    description: revision to be used from repo of the code to be built
  - name: DOCKERFILE-MOCKPRODUCER
    description: Path to the Dockerfile to build mockproducer
    default: "./rsbc-ride-kafka-mockproducer/src/main/docker/Dockerfile.multistage"
  - name: CONTEXT-MOCKPRODUCER
    description: Path to the mockproducer directory to use as context
    default: "./rsbc-ride-kafka-mockproducer"
  - name: IMAGE-MOCKPRODUCER
    description: image of mockproducer to be build from the code
    default: "image-registry.openshift-image-registry.svc:5000/be5301-tools/rsbc-ride-kafka-mockproducer"
  - name: DOCKERFILE-MOCKCONSUMER
    description: Path to the Dockerfile to build mockconsumer
    default: "./rsbc-ride-kafka-mockconsumer/src/main/docker/Dockerfile.multistage"
  - name: CONTEXT-MOCKCONSUMER
    description: Path to the mockconsumer directory to use as context
    default: "./rsbc-ride-kafka-mockconsumer"
  - name: IMAGE-MOCKCONSUMER
    description: image of mockconsumer to be build from the code
    default: "image-registry.openshift-image-registry.svc:5000/be5301-tools/rsbc-ride-kafka-mockconsumer"
  resourcetemplates:
  - apiVersion: tekton.dev/v1beta1
    kind: PipelineRun
    metadata:
      generateName: ride-build-and-deploy-run-use-kaniko-
    spec:
      serviceAccountName: service-tekton-triggers-sa
      pipelineRef:
        name: ride-build-and-deploy-use-kaniko
      params:
      - name: git-url
        value: $(tt.params.git-url)
      - name: git-revision
        value: $(tt.params.git-revision)
      - name: IMAGE-MOCKPRODUCER
        value: $(tt.params.IMAGE-MOCKPRODUCER)
      - name: DOCKERFILE-MOCKPRODUCER
        value: $(tt.params.DOCKERFILE-MOCKPRODUCER)
      - name: CONTEXT-MOCKPRODUCER
        value: $(tt.params.CONTEXT-MOCKPRODUCER)
      - name: IMAGE-MOCKCONSUMER
        value: $(tt.params.IMAGE-MOCKCONSUMER)
      - name: DOCKERFILE-MOCKCONSUMER
        value: $(tt.params.DOCKERFILE-MOCKCONSUMER)
      - name: CONTEXT-MOCKCONSUMER
        value: $(tt.params.CONTEXT-MOCKCONSUMER)
      workspaces:
      - name: shared-workspace
        volumeClaimTemplate:
          spec:
            accessModes:
            - ReadWriteOnce
            resources:
              requests:
                storage: 500Mi
---
apiVersion: triggers.tekton.dev/v1alpha1
kind: EventListener
metadata:
  name: ride-build-push-image-trigger-use-kaniko
spec:
  serviceAccountName: service-tekton-triggers-sa
  triggers:
    - name: github-listener
      interceptors:
        - github:
            secretRef:
              secretName: github-webhook-secret
              secretKey: github-webhook-secret
            eventTypes:
              - pull_request
        - cel:
            filter: >-
              (header.match('X-GitHub-Event', 'pull_request') &&
               body.action in ['opened', 'synchronize', 'reopened'])
      bindings:
        - ref: ride-build-push-image-trigger-use-kaniko
      template:
        ref: ride-build-push-image-trigger-use-kaniko
---
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerBinding
metadata:
  name: ride-build-push-image-trigger-use-kaniko
spec:
  params:
  - name: pr-number
    value: $(body.number)
  - name: pr-url
    value: $(body.pull_request.html_url)
  - name: event-type
    value: $(header.X-GitHub-Event)
  - name: pr-action-type
    value: $(body.action)
  - name: git-revision
    value: $(body.pull_request.head.sha)
  - name: git-url
    value: $(body.pull_request.head.repo.clone_url)
  - name: content-type
    value: $(header.Content-Type)
