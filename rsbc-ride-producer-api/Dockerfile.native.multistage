## Stage 1 : build with maven builder image with native capabilities
FROM image-registry.openshift-image-registry.svc:5000/be5301-tools/quarkus-builder-image:1.0 AS build
USER root
# RUN microdnf install findutils
COPY --chown=quarkus:quarkus ./gradlew /code/gradlew
COPY --chown=quarkus:quarkus ./gradle /code/gradle
COPY --chown=quarkus:quarkus ./build.gradle /code/
COPY --chown=quarkus:quarkus ./settings.gradle /code/
COPY --chown=quarkus:quarkus ./gradle.properties /code/
RUN chmod +x /code/gradlew
USER quarkus
# RUN mkdir /code
RUN ls -a
WORKDIR /code
COPY ./src /code/src
COPY /tmp/ca.p12 /tmp/ca.p12
RUN ls /code/src
RUN ls -a
# RUN cp ./ca.p12 /tmp/ca.p12
RUN ls /tmp
# RUN ./gradlew build -Dquarkus.package.type=native



# ## Stage 2 : create the docker final image
# FROM image-registry.openshift-image-registry.svc:5000/be5301-tools/quarkus-ubi-base-image:1.0
# WORKDIR /work/
# RUN chown 1001 /work \
#     && chmod "g+rwX" /work \
#     && chown 1001:root /work
# COPY --from=build --chown=1001:root build/*-runner /work/application

# EXPOSE 8080
# USER 1001

# CMD ["./application", "-Dquarkus.http.host=0.0.0.0"]