name: General Flow

on:
  push:
    branches:   
      - 'feature/producerapi-deployv1'


jobs:
  pre_req_steps:
    name: Pre-requisites for the build and deploy
    runs-on: ubuntu-latest
    environment: pr
    # env:
    #   build_config_name: "jh-etk-biadapter-buildconfig"
    #   base_image_tag: "1"
    #   PR_NUMBER: ${{ github.event.number }}
    #   PR_IMAGE_STREAM_TAG: pr-build-${{ github.sha}}


    steps:
      - name: Checkout repository
        uses: actions/checkout@v3      
      - name: Authenticate and set context
        uses: redhat-actions/oc-login@v1.1.2
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER_URL_SILVER }}
          openshift_token: ${{ secrets.OPENSHIFT_SA_PIPELINE_TOKEN_SILVER }}
          namespace: "${{ secrets.OPENSHIFT_LICENSE_PLATE_SILVER }}-tools"
      - name: Create Secrets
        run: |
          cd rsbc-ride-producer-api/openshift
          oc process -f producer-api-secret.yml --param NAMESPACE=${{ secrets.OPENSHIFT_LICENSE_PLATE_SILVER }}-tools --param APP_ACCEPTED_EVENT_TOPIC=${{ secrets.APP_ACCEPTED_EVENT_TOPIC }} --param TEST_EVENT_TOPIC=${{ secrets.TEST_EVENT_TOPIC }} --param DISCLOSURE_EVENT_TOPIC=${{ secrets.DISCLOSURE_EVENT_TOPIC }} --param EVSUBMITTED_EVENT_TOPIC=${{ secrets.EVSUBMITTED_EVENT_TOPIC }} --param IMAGE_NAMESPACE=${{ secrets.IMAGE_NAMESPACE }} --param IMAGE_REGISTRY=${{ secrets.IMAGE_REGISTRY }} --param KAFKA_SASL_MECH=${{ secrets.KAFKA_SASL_MECH }} --param KAFKA_SCHEMA_REGISTRY=${{ secrets.KAFKA_SCHEMA_REGISTRY }} --param KAFKA_SEC_PROTOCOL=${{ secrets.KAFKA_SEC_PROTOCOL }} --param KAFKA_SERVER=${{ secrets.KAFKA_SERVER }} --param PAYRECVD_EVENT_TOPIC=${{ secrets.PAYRECVD_EVENT_TOPIC }} --param REVSCHED_EVENT_TOPIC=${{ secrets.REVSCHED_EVENT_TOPIC }} --param SSL_PROTOCOL=${{ secrets.SSL_PROTOCOL }} --param SSL_TRUSTSTORE=${{ secrets.SSL_TRUSTSTORE }} --param SSL_TRUSTTORE_PASS=${{ secrets.SSL_TRUSTTORE_PASS }} --param SSL_TRUSTTORE_TYPE=${{ secrets.SSL_TRUSTTORE_TYPE }} | oc apply -f -
          
      # - name: Start the build and push
      #   run: |
      #     oc start-build ${{ env.build_config_name }} --follow --wait

      # oc process -f producer-api-secret.yml --param NAMESPACE=${{ secrets.OPENSHIFT_LICENSE_PLATE_SILVER }}-tools --param APP_ACCEPTED_EVENT_TOPIC=${{ secrets.APP_ACCEPTED_EVENT_TOPIC }} --param TEST_EVENT_TOPIC=${{ secrets.TEST_EVENT_TOPIC }} --param DISCLOSURE_EVENT_TOPIC=${{ secrets.DISCLOSURE_EVENT_TOPIC }} --param EVSUBMITTED_EVENT_TOPIC=${{ secrets.EVSUBMITTED_EVENT_TOPIC }} --param IMAGE_NAMESPACE=${{ secrets.IMAGE_NAMESPACE }} --param IMAGE_REGISTRY=${{ secrets.IMAGE_REGISTRY }} --param KAFKA_SASL_CONFIG=${{ secrets.KAFKA_SASL_CONFIG }} --param KAFKA_SASL_MECH=${{ secrets.KAFKA_SASL_MECH }} --param KAFKA_SCHEMA_REGISTRY=${{ secrets.KAFKA_SCHEMA_REGISTRY }} --param KAFKA_SEC_PROTOCOL=${{ secrets.KAFKA_SEC_PROTOCOL }} --param KAFKA_SERVER=${{ secrets.KAFKA_SERVER }} --param PAYRECVD_EVENT_TOPIC=${{ secrets.PAYRECVD_EVENT_TOPIC }} --param REVSCHED_EVENT_TOPIC=${{ secrets.REVSCHED_EVENT_TOPIC }} --param SSL_PROTOCOL=${{ secrets.SSL_PROTOCOL }} --param SSL_TRUSTSTORE=${{ secrets.SSL_TRUSTSTORE }} --param SSL_TRUSTTORE_PASS=${{ secrets.SSL_TRUSTTORE_PASS }} --param SSL_TRUSTTORE_TYPE=${{ secrets.SSL_TRUSTTORE_TYPE }} | oc apply -f -